unnest(final_status) %>%
summarize(num_surviving = sum(final_status))
}
calculat_proportion_of_survivors <- function(number_of_survivors, number_of_fish){
proportion_of_survivors <- number_of_survivors[[1]] / number_of_fish
}
survival_simulation_driver <- function(number_of_fish, mean_fish_length, total_transects){
num_trans <- calculate_num_trans_traversed(n_transects = total_transects)
pred_pos <- get_pred_postitions(n_transects = total_transects)
stream_grid_frame <- create_stream_raster_frame(pred_pos, n_transects = total_transects)
enc_prob_frame <- calc_enc_probs(stream_grid_frame)
enc_probs <- get_enc_prob_vector(enc_prob_frame)
surv_table <- predation_survival_driver_func()
fish_frame <- set_up_dataframe_of_fish_lengths(number_of_fish, mean = mean_fish_length)
fish_frame_with_survival_from_length <- add_length_survival_boost(fish_frame,surv_table)
cells_traversed <- create_frame_of_all_cells_traversed_per_fish(fish_frame_with_survival_from_length$fish, enc_probs, num_trans)
joined_fish_cell_traversed <- combine_encounter_frame_and_fish_frame(fish_frame_with_survival_from_length, cells_traversed)
joined_frame_with_sim_cols <- add_encounter_simulation_columns(joined_fish_cell_traversed)
fish_summary_frame <- sum_encounter_outcomes(joined_frame_with_sim_cols)
number_of_survivors <- calculate_number_of_survivors(fish_summary_frame, num_trans)
proprtion_of_survivors <- calculat_proportion_of_survivors(number_of_survivors, number_of_fish)
}
#### using future apply
future_apply_calculate_number_of_survivors <- function(fish_summary_frame, num_trans_traversed){
fish_summary_frame %>%
mutate(final_status = future_lapply(total_alive_outcomes, FUN = evaluate_final_status_of_fish, num_trans_traversed)) %>%
unnest(final_status) %>%
summarize(num_surviving = sum(final_status))
}
future_apply_add_encounter_simulation_columns <- function(combined_frame){
combined_frame%>%
mutate(survival_boost = as.numeric(survival_boost),
enc_prob = as.numeric(enc_prob),
modified_enc = calculate_encounter_prob_based_on_length(survival_boost, enc_prob),
encounter = future_lapply(modified_enc, check_if_encounter_occurs, future.seed=TRUE),
alive = as.numeric(lapply(encounter, encounter_simulator)))
}
future_apply_add_length_survival_boost <- function(fish_frame, surv_table){
fish_frame %>%
mutate(survival_boost = future_lapply(length, FUN = calcule_risk_modifier, survival_table = surv_table, selected_variable = 'length',future.seed=TRUE))
}
future_apply_create_frame_of_all_cells_traversed_per_fish <- function(fish_vector, enc_probs, num_trans){
df <- bind_rows(future_lapply(fish_vector,
FUN = encounter_frame,
enc_prob_vector = enc_probs,
num_trans_traversed = num_trans,
future.seed=TRUE))
}
future_apply_survival_simulation_driver <- function(number_of_fish, mean_fish_length, total_transects){
num_trans <- calculate_num_trans_traversed(n_transects = total_transects)
pred_pos <- get_pred_postitions(n_transects = total_transects)
stream_grid_frame <- create_stream_raster_frame(pred_pos, n_transects = total_transects)
enc_prob_frame <- calc_enc_probs(stream_grid_frame)
enc_probs <- get_enc_prob_vector(enc_prob_frame)
surv_table <- predation_survival_driver_func()
fish_frame <- set_up_dataframe_of_fish_lengths(number_of_fish, mean = mean_fish_length)
fish_frame_with_survival_from_length <- future_apply_add_length_survival_boost(fish_frame,surv_table)
cells_traversed <- future_apply_create_frame_of_all_cells_traversed_per_fish(fish_frame_with_survival_from_length$fish, enc_probs, num_trans)
joined_fish_cell_traversed <- combine_encounter_frame_and_fish_frame(fish_frame_with_survival_from_length, cells_traversed)
joined_frame_with_sim_cols <- future_apply_add_encounter_simulation_columns(joined_fish_cell_traversed)
fish_summary_frame <- sum_encounter_outcomes(joined_frame_with_sim_cols)
number_of_survivors <- future_apply_calculate_number_of_survivors(fish_summary_frame, num_trans)
proprtion_of_survivors <- calculat_proportion_of_survivors(number_of_survivors, number_of_fish)
}
#### using future map
future_map_calculate_number_of_survivors <- function(fish_summary_frame, num_trans_traversed){
fish_summary_frame %>%
mutate(final_status = future_map(total_alive_outcomes, evaluate_final_status_of_fish, num_trans_traversed)) %>%
unnest(final_status) %>%
summarize(num_surviving = sum(final_status))
}
future_map_add_encounter_simulation_columns <- function(combined_frame){
combined_frame%>%
mutate(survival_boost = as.numeric(survival_boost),
enc_prob = as.numeric(enc_prob),
modified_enc = calculate_encounter_prob_based_on_length(survival_boost, enc_prob),
encounter = future_map(modified_enc, check_if_encounter_occurs, .options=furrr_options(seed=TRUE)),
alive = as.numeric(lapply(encounter, encounter_simulator)))
}
future_map_add_length_survival_boost <- function(fish_frame, surv_table){
fish_frame %>%
mutate(survival_boost = future_lapply(length, calcule_risk_modifier, survival_table = surv_table, selected_variable = 'length',future.seed=TRUE))
}
future_map_create_frame_of_all_cells_traversed_per_fish <- function(fish_vector, enc_probs, num_trans){
df <- bind_rows(future_map(fish_vector,
encounter_frame,
enc_prob_vector = enc_probs,
num_trans_traversed = num_trans,
.options=furrr_options(seed=TRUE)))
}
future_map_survival_simulation_driver <- function(number_of_fish, mean_fish_length, total_transects){
num_trans <- calculate_num_trans_traversed(n_transects = total_transects)
pred_pos <- get_pred_postitions(n_transects = total_transects)
stream_grid_frame <- create_stream_raster_frame(pred_pos, n_transects = total_transects)
enc_prob_frame <- calc_enc_probs(stream_grid_frame)
enc_probs <- get_enc_prob_vector(enc_prob_frame)
surv_table <- predation_survival_driver_func()
fish_frame <- set_up_dataframe_of_fish_lengths(number_of_fish, mean = mean_fish_length)
fish_frame_with_survival_from_length <- future_map_add_length_survival_boost(fish_frame,surv_table)
cells_traversed <- future_map_create_frame_of_all_cells_traversed_per_fish(fish_frame_with_survival_from_length$fish, enc_probs, num_trans)
joined_fish_cell_traversed <- combine_encounter_frame_and_fish_frame(fish_frame_with_survival_from_length, cells_traversed)
joined_frame_with_sim_cols <- future_map_add_encounter_simulation_columns(joined_fish_cell_traversed)
fish_summary_frame <- sum_encounter_outcomes(joined_frame_with_sim_cols)
number_of_survivors <- future_map_calculate_number_of_survivors(fish_summary_frame, num_trans)
proprtion_of_survivors <- calculat_proportion_of_survivors(number_of_survivors, number_of_fish)
}
lengths = seq(7, 15, by = 1)
reach_length_km = seq(1, 20, by=1)
library(furrr)
tic()
df <- expand.grid(mean_fish_length = lengths, distance_traveled = reach_length_km) %>%
arrange(mean_fish_length) %>%
mutate(survival = future_map2(mean_fish_length,distance_traveled,
future_map_survival_simulation_driver,
number_of_fish = 100,
.options=furrr_options(seed=TRUE)))
toc()
df2 <- df %>%
mutate(mean_fish_length = as.factor(mean_fish_length),
distance_traveled = as.numeric(distance_traveled),
log_survival = log(as.numeric(survival)))
labels = c(
"7" = "Mean length = 7 cm",
"8" = "Mean length = 8 cm",
"9" = "Mean length = 9 cm",
"10" = "Mean length = 10 cm",
"11" = "Mean length = 11 cm",
"12" = "Mean length = 12 cm",
"13" = "Mean length = 13 cm",
"14" = "Mean length = 14 cm",
"15" = "Mean length = 15 cm"
)
library(ggpubr)
ggplot(df2, aes(x = distance_traveled, y = log_survival)) +
geom_point() +
geom_smooth(method = "lm") +
stat_regline_equation(label.x = 10, label.y = -1.5, aes(label = ..eq.label..)) +
stat_regline_equation(label.x = 10, label.y = -2.25, aes(label = ..rr.label..)) +
facet_wrap(~ mean_fish_length, labeller = as_labeller(labels)) +
labs(title = "Log survival vs. distance traveled (km) per size class (cm)",
x = "Distance traveled (km)",
y = "Survival (log)") +
theme(panel.spacing=unit(.05, "lines"),
panel.border = element_rect(color = "black", fill = NA, size = 1),
strip.background = element_rect(color = "black", size = 1))
ggplot(df2, aes(x = distance_traveled, y = log_survival)) +
geom_point() +
geom_smooth(method = "lm") +
stat_regline_equation(label.x = 4, label.y = -2.5, aes(label = ..eq.label..)) +
stat_regline_equation(label.x = 4, label.y = -3, aes(label = ..rr.label..)) +
facet_wrap(~ mean_fish_length, labeller = as_labeller(labels)) +
labs(title = "Log survival vs. distance traveled (km) per size class (cm)",
x = "Distance traveled (km)",
y = "Survival (log)") +
theme(panel.spacing=unit(.05, "lines"),
panel.border = element_rect(color = "black", fill = NA, size = 1),
strip.background = element_rect(color = "black", size = 1))
ggplot(df2, aes(x = distance_traveled, y = log_survival)) +
geom_point() +
geom_smooth(method = "lm") +
stat_regline_equation(label.x = 1, label.y = -2.5, aes(label = ..eq.label..)) +
stat_regline_equation(label.x = 1, label.y = -3, aes(label = ..rr.label..)) +
facet_wrap(~ mean_fish_length, labeller = as_labeller(labels)) +
labs(title = "Log survival vs. distance traveled (km) per size class (cm)",
x = "Distance traveled (km)",
y = "Survival (log)") +
theme(panel.spacing=unit(.05, "lines"),
panel.border = element_rect(color = "black", fill = NA, size = 1),
strip.background = element_rect(color = "black", size = 1))
ggplot(df2, aes(x = distance_traveled, y = log_survival)) +
geom_point() +
geom_smooth(method = "lm") +
stat_regline_equation(label.x = 1, label.y = -3, aes(label = ..eq.label..)) +
stat_regline_equation(label.x = 1, label.y = -3.5, aes(label = ..rr.label..)) +
facet_wrap(~ mean_fish_length, labeller = as_labeller(labels)) +
labs(title = "Log survival vs. distance traveled (km) per size class (cm)",
x = "Distance traveled (km)",
y = "Survival (log)") +
theme(panel.spacing=unit(.05, "lines"),
panel.border = element_rect(color = "black", fill = NA, size = 1),
strip.background = element_rect(color = "black", size = 1))
ggplot(df2, aes(x = distance_traveled, y = log_survival)) +
geom_point() +
geom_smooth(method = "lm") +
stat_regline_equation(label.x = 1, label.y = -3.2, aes(label = ..eq.label..)) +
stat_regline_equation(label.x = 1, label.y = -3.7, aes(label = ..rr.label..)) +
facet_wrap(~ mean_fish_length, labeller = as_labeller(labels)) +
labs(title = "Log survival vs. distance traveled (km) per size class (cm)",
x = "Distance traveled (km)",
y = "Survival (log)") +
theme(panel.spacing=unit(.05, "lines"),
panel.border = element_rect(color = "black", fill = NA, size = 1),
strip.background = element_rect(color = "black", size = 1))
ggplot(df2, aes(x = distance_traveled, y = log_survival)) +
geom_point() +
geom_smooth(method = "lm") +
stat_regline_equation(label.x = 1, label.y = -3.35, aes(label = ..eq.label..)) +
stat_regline_equation(label.x = 1, label.y = -3.8, aes(label = ..rr.label..)) +
facet_wrap(~ mean_fish_length, labeller = as_labeller(labels)) +
labs(title = "Log survival vs. distance traveled (km) per size class (cm)",
x = "Distance traveled (km)",
y = "Survival (log)") +
theme(panel.spacing=unit(.05, "lines"),
panel.border = element_rect(color = "black", fill = NA, size = 1),
strip.background = element_rect(color = "black", size = 1))
tic()
df <- expand.grid(mean_fish_length = lengths, distance_traveled = reach_length_km) %>%
arrange(mean_fish_length) %>%
mutate(survival = future_map2(mean_fish_length,distance_traveled,
future_map_survival_simulation_driver,
number_of_fish = 500,
.options=furrr_options(seed=TRUE)))
toc()
df2 <- df %>%
mutate(mean_fish_length = as.factor(mean_fish_length),
distance_traveled = as.numeric(distance_traveled),
log_survival = log(as.numeric(survival)))
labels = c(
"7" = "Mean length = 7 cm",
"8" = "Mean length = 8 cm",
"9" = "Mean length = 9 cm",
"10" = "Mean length = 10 cm",
"11" = "Mean length = 11 cm",
"12" = "Mean length = 12 cm",
"13" = "Mean length = 13 cm",
"14" = "Mean length = 14 cm",
"15" = "Mean length = 15 cm"
)
library(ggpubr)
ggplot(df2, aes(x = distance_traveled, y = log_survival)) +
geom_point() +
geom_smooth(method = "lm") +
stat_regline_equation(label.x = 1, label.y = -3.35, aes(label = ..eq.label..)) +
stat_regline_equation(label.x = 1, label.y = -3.8, aes(label = ..rr.label..)) +
facet_wrap(~ mean_fish_length, labeller = as_labeller(labels)) +
labs(title = "Log survival vs. distance traveled (km) per size class (cm)",
x = "Distance traveled (km)",
y = "Survival (log)") +
theme(panel.spacing=unit(.05, "lines"),
panel.border = element_rect(color = "black", fill = NA, size = 1),
strip.background = element_rect(color = "black", size = 1))
library('tidyverse')
library("rstudioapi")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
prey_conv <- function(a, B, pred_L){
exp(a + B * log(pred_L))
}
predLData <- read.csv('./lmb_stb_combined.csv') %>%
mutate(max_prey_length = prey_conv(0.443, 0.774, length_mm),
safety = cumulative_proportion - proportion_of_total)
predLModel <- glm(predLData$safety ~ predLData$max_prey_length,
family = quasibinomial(logit),
data = predLData)
predLWFitData  <-  predLData %>%
mutate(predict = predict.glm(predLModel, type = "response")) %>%
arrange(max_prey_length) %>%
filter(max_prey_length <= 200)
ggplot(predLWFitData, aes(x = max_prey_length)) +
theme_classic(base_size = 30) +
labs(y = "Fraction present", x = "Length (mm)") +
geom_point(aes(y = safety)) +
geom_path(aes(y = predict), color = "red") +
ggtitle("Using cum. prop. and gape limitation")
predDData <- data.frame(density = c(3, 6, 12),
survival = c(.87, .78, .84))
predDModel <- glm(predDData$survival ~ predDData$density,
family = quasibinomial(logit),
data = predDData)
predDWFitData <-  predDData %>%
mutate(predict = predict.glm(predDModel, type = "response")) %>%
arrange(density)
ggplot(predDWFitData, aes(x = density)) +
theme_classic(base_size = 30) +
labs(y = "Fraction present", x = "Density (fish / m^2)") +
geom_point(aes(y = survival)) +
geom_path(aes(y = predict), color = "red")
#ggtitle("Using cum. prop. and gape limitation")
angle_calc <- function(length){
0.0167 * exp(9.14 - 2.4 * log(length) + 0.229 * log(length)^2)
}
predLData <- read.csv('./lmb_stb_combined.csv') %>%
mutate(max_prey_length = prey_conv(0.443, 0.774, length_mm),
safety = cumulative_proportion - proportion_of_total,
angle = angle_calc(length_mm),
reaction_dist = max_prey_length / (2 * tan(angle / 2)))
predLData
ggplot(df2, aes(x = distance_traveled, y = log_survival)) +
geom_point() +
geom_smooth(method = "lm") +
stat_regline_equation(label.x = 1, label.y = -3.35, aes(label = ..eq.label..)) +
stat_regline_equation(label.x = 1, label.y = -3.8, aes(label = ..rr.label..)) +
facet_wrap(~ mean_fish_length, labeller = as_labeller(labels)) +
labs(title = "Log survival vs. distance traveled (km) per size class (cm)",
x = "Distance traveled (km)",
y = "Survival (log)") +
theme(panel.spacing=unit(.05, "lines"),
panel.border = element_rect(color = "black", fill = NA, size = 1),
strip.background = element_rect(color = "black", size = 1))
df2 <- df %>%
mutate(mean_fish_length = as.factor(mean_fish_length),
distance_traveled = as.numeric(distance_traveled),
log_survival = log(as.numeric(survival))) + 1
labels = c(
"7" = "Mean length = 7 cm",
"8" = "Mean length = 8 cm",
"9" = "Mean length = 9 cm",
"10" = "Mean length = 10 cm",
"11" = "Mean length = 11 cm",
"12" = "Mean length = 12 cm",
"13" = "Mean length = 13 cm",
"14" = "Mean length = 14 cm",
"15" = "Mean length = 15 cm"
)
library(ggpubr)
ggplot(df2, aes(x = distance_traveled, y = log_survival)) +
geom_point() +
geom_smooth(method = "lm") +
stat_regline_equation(label.x = 1, label.y = -3.35, aes(label = ..eq.label..)) +
stat_regline_equation(label.x = 1, label.y = -3.8, aes(label = ..rr.label..)) +
facet_wrap(~ mean_fish_length, labeller = as_labeller(labels)) +
labs(title = "Log survival vs. distance traveled (km) per size class (cm)",
x = "Distance traveled (km)",
y = "Survival (log)") +
theme(panel.spacing=unit(.05, "lines"),
panel.border = element_rect(color = "black", fill = NA, size = 1),
strip.background = element_rect(color = "black", size = 1))
df2 <- df %>%
mutate(mean_fish_length = as.factor(mean_fish_length),
distance_traveled = as.numeric(distance_traveled),
log_survival = log(as.numeric(survival))+1)
labels = c(
"7" = "Mean length = 7 cm",
"8" = "Mean length = 8 cm",
"9" = "Mean length = 9 cm",
"10" = "Mean length = 10 cm",
"11" = "Mean length = 11 cm",
"12" = "Mean length = 12 cm",
"13" = "Mean length = 13 cm",
"14" = "Mean length = 14 cm",
"15" = "Mean length = 15 cm"
)
library(ggpubr)
ggplot(df2, aes(x = distance_traveled, y = log_survival)) +
geom_point() +
geom_smooth(method = "lm") +
stat_regline_equation(label.x = 1, label.y = -3.35, aes(label = ..eq.label..)) +
stat_regline_equation(label.x = 1, label.y = -3.8, aes(label = ..rr.label..)) +
facet_wrap(~ mean_fish_length, labeller = as_labeller(labels)) +
labs(title = "Log survival vs. distance traveled (km) per size class (cm)",
x = "Distance traveled (km)",
y = "Survival (log)") +
theme(panel.spacing=unit(.05, "lines"),
panel.border = element_rect(color = "black", fill = NA, size = 1),
strip.background = element_rect(color = "black", size = 1))
df2 %>% filter(mean_fish_length=='7')
ggplot(df2, aes(x = distance_traveled, y = survival)) +
geom_point() +
geom_smooth(method = "lm") +
stat_regline_equation(label.x = 1, label.y = -3.35, aes(label = ..eq.label..)) +
stat_regline_equation(label.x = 1, label.y = -3.8, aes(label = ..rr.label..)) +
facet_wrap(~ mean_fish_length, labeller = as_labeller(labels)) +
labs(title = "Log survival vs. distance traveled (km) per size class (cm)",
x = "Distance traveled (km)",
y = "Survival (log)") +
theme(panel.spacing=unit(.05, "lines"),
panel.border = element_rect(color = "black", fill = NA, size = 1),
strip.background = element_rect(color = "black", size = 1))
ggplot(df2, aes(x = distance_traveled, y = as.numeric(survival))) +
geom_point() +
geom_smooth(method = "lm") +
stat_regline_equation(label.x = 1, label.y = -3.35, aes(label = ..eq.label..)) +
stat_regline_equation(label.x = 1, label.y = -3.8, aes(label = ..rr.label..)) +
facet_wrap(~ mean_fish_length, labeller = as_labeller(labels)) +
labs(title = "Log survival vs. distance traveled (km) per size class (cm)",
x = "Distance traveled (km)",
y = "Survival (log)") +
theme(panel.spacing=unit(.05, "lines"),
panel.border = element_rect(color = "black", fill = NA, size = 1),
strip.background = element_rect(color = "black", size = 1))
ggplot(df2, aes(x = distance_traveled, y = as.numeric(survival))) +
geom_point() +
geom_smooth(method = "lm") +
# stat_regline_equation(label.x = 1, label.y = -3.35, aes(label = ..eq.label..)) +
# stat_regline_equation(label.x = 1, label.y = -3.8, aes(label = ..rr.label..)) +
facet_wrap(~ mean_fish_length, labeller = as_labeller(labels)) +
labs(title = "Log survival vs. distance traveled (km) per size class (cm)",
x = "Distance traveled (km)",
y = "Survival (log)") +
theme(panel.spacing=unit(.05, "lines"),
panel.border = element_rect(color = "black", fill = NA, size = 1),
strip.background = element_rect(color = "black", size = 1))
ggplot(df2, aes(x = distance_traveled, y = as.numeric(survival))) +
geom_point() +
geom_smooth(method = "lm") +
stat_regline_equation(label.x = 1, label.y = 0, aes(label = ..eq.label..)) +
stat_regline_equation(label.x = 1, label.y = -1, aes(label = ..rr.label..)) +
facet_wrap(~ mean_fish_length, labeller = as_labeller(labels)) +
labs(title = "Log survival vs. distance traveled (km) per size class (cm)",
x = "Distance traveled (km)",
y = "Survival (log)") +
theme(panel.spacing=unit(.05, "lines"),
panel.border = element_rect(color = "black", fill = NA, size = 1),
strip.background = element_rect(color = "black", size = 1))
ggplot(df2, aes(x = distance_traveled, y = as.numeric(survival))) +
geom_point() +
geom_smooth(method = "lm") +
stat_regline_equation(label.x = 1, label.y = -0.2, aes(label = ..eq.label..)) +
stat_regline_equation(label.x = 1, label.y = -0.6, aes(label = ..rr.label..)) +
facet_wrap(~ mean_fish_length, labeller = as_labeller(labels)) +
labs(title = "Log survival vs. distance traveled (km) per size class (cm)",
x = "Distance traveled (km)",
y = "Survival (log)") +
theme(panel.spacing=unit(.05, "lines"),
panel.border = element_rect(color = "black", fill = NA, size = 1),
strip.background = element_rect(color = "black", size = 1))
ggplot(df2, aes(x = distance_traveled, y = as.numeric(survival))) +
geom_point() +
geom_smooth(method = "lm") +
stat_regline_equation(label.x = 1, label.y = -0.2, aes(label = ..eq.label..)) +
stat_regline_equation(label.x = 1, label.y = -0.4, aes(label = ..rr.label..)) +
facet_wrap(~ mean_fish_length, labeller = as_labeller(labels)) +
labs(title = "Log survival vs. distance traveled (km) per size class (cm)",
x = "Distance traveled (km)",
y = "Survival (log)") +
theme(panel.spacing=unit(.05, "lines"),
panel.border = element_rect(color = "black", fill = NA, size = 1),
strip.background = element_rect(color = "black", size = 1))
ggplot(df2, aes(x = distance_traveled, y = log_survival)) +
geom_point() +
geom_smooth(method = "lm") +
stat_regline_equation(label.x = 1, label.y = -3.35, aes(label = ..eq.label..)) +
stat_regline_equation(label.x = 1, label.y = -3.8, aes(label = ..rr.label..)) +
facet_wrap(~ mean_fish_length, labeller = as_labeller(labels)) +
labs(title = "Log survival vs. distance traveled (km) per size class (cm)",
x = "Distance traveled (km)",
y = "Survival (log)") +
theme(panel.spacing=unit(.05, "lines"),
panel.border = element_rect(color = "black", fill = NA, size = 1),
strip.background = element_rect(color = "black", size = 1))
ggplot(df2, aes(x = distance_traveled, y = log_survival)) +
geom_point() +
geom_smooth(method = "lm") +
stat_regline_equation(label.x = 1, label.y = -3.35, aes(label = ..eq.label..)) +
stat_regline_equation(label.x = 1, label.y = -3.85, aes(label = ..rr.label..)) +
facet_wrap(~ mean_fish_length, labeller = as_labeller(labels)) +
labs(title = "Log survival vs. distance traveled (km) per size class (cm)",
x = "Distance traveled (km)",
y = "Survival (log)") +
theme(panel.spacing=unit(.05, "lines"),
panel.border = element_rect(color = "black", fill = NA, size = 1),
strip.background = element_rect(color = "black", size = 1))
df2 <- df %>%
mutate(mean_fish_length = as.factor(mean_fish_length),
distance_traveled = as.numeric(distance_traveled),
log_survival = log(as.numeric(survival) + min(as.numeric(survival)) / 2))
labels = c(
"7" = "Mean length = 7 cm",
"8" = "Mean length = 8 cm",
"9" = "Mean length = 9 cm",
"10" = "Mean length = 10 cm",
"11" = "Mean length = 11 cm",
"12" = "Mean length = 12 cm",
"13" = "Mean length = 13 cm",
"14" = "Mean length = 14 cm",
"15" = "Mean length = 15 cm"
)
library(ggpubr)
ggplot(df2, aes(x = distance_traveled, y = log_survival)) +
geom_point() +
geom_smooth(method = "lm") +
stat_regline_equation(label.x = 1, label.y = -3.35, aes(label = ..eq.label..)) +
stat_regline_equation(label.x = 1, label.y = -3.85, aes(label = ..rr.label..)) +
facet_wrap(~ mean_fish_length, labeller = as_labeller(labels)) +
labs(title = "Log survival vs. distance traveled (km) per size class (cm)",
x = "Distance traveled (km)",
y = "Survival (log)") +
theme(panel.spacing=unit(.05, "lines"),
panel.border = element_rect(color = "black", fill = NA, size = 1),
strip.background = element_rect(color = "black", size = 1))
df %>% select(survival) %>% min(as.numeric(survival))
s <- df %>% pull(survival)
min(s)
min(as.numeric(s))
df2 <- df %>%
mutate(mean_fish_length = as.factor(mean_fish_length),
distance_traveled = as.numeric(distance_traveled),
log_survival = log(as.numeric(survival) + min(as.numeric(survival)[as.numeric(survival) > 0]) / 2))
df2
labels = c(
"7" = "Mean length = 7 cm",
"8" = "Mean length = 8 cm",
"9" = "Mean length = 9 cm",
"10" = "Mean length = 10 cm",
"11" = "Mean length = 11 cm",
"12" = "Mean length = 12 cm",
"13" = "Mean length = 13 cm",
"14" = "Mean length = 14 cm",
"15" = "Mean length = 15 cm"
)
library(ggpubr)
ggplot(df2, aes(x = distance_traveled, y = log_survival)) +
geom_point() +
geom_smooth(method = "lm") +
stat_regline_equation(label.x = 1, label.y = -3.35, aes(label = ..eq.label..)) +
stat_regline_equation(label.x = 1, label.y = -3.85, aes(label = ..rr.label..)) +
facet_wrap(~ mean_fish_length, labeller = as_labeller(labels)) +
labs(title = "Log survival vs. distance traveled (km) per size class (cm)",
x = "Distance traveled (km)",
y = "Survival (log)") +
theme(panel.spacing=unit(.05, "lines"),
panel.border = element_rect(color = "black", fill = NA, size = 1),
strip.background = element_rect(color = "black", size = 1))
