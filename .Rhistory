predationPreData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortFishByOccurence",
na.strings = "NA")
predDistData = predationPreData %>%
filter(fishSize_mm =="< 50",
variable == "Dis to Cover") %>%
mutate(fraction = cumlitaveFraction - lag(cumlitaveFraction),
fraction = ifelse(is.na(fraction), cumlitaveFraction, fraction),
fractionalOccurrence = fraction/max(fraction, na.rm = T)*maxSurvival)
predLData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortFishByMort",
na.strings = "NA") %>%
filter(note != "outlier") %>%
mutate(dailySurvival = NA,
dailySurvival = ifelse(units == "survival", measure^(1/time_days), dailySurvival),
dailySurvival = ifelse(units == "daily survival", measure, dailySurvival),
unitlessValue = ifelse(units == "relative vlun.", 1-measure, dailySurvival)) %>%
rename(X = length_cm)
predLData
predTData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortAqByPredMet",
na.strings = "NA") %>%
group_by(author, year, journal, species) %>%
mutate(unitlessValue = 1-value/max(value)) %>%
ungroup()
##### Data on predation preventation from length (mortFishAqPredL) #####
# load the data and convert all metrics to daily survival
predLData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortFishByMort",
na.strings = "NA") %>%
filter(note != "outlier") %>%
mutate(dailySurvival = NA,
dailySurvival = ifelse(units == "survival", measure^(1/time_days), dailySurvival),
dailySurvival = ifelse(units == "daily survival", measure, dailySurvival),
unitlessValue = ifelse(units == "relative vlun.", 1-measure, dailySurvival)) %>%
rename(X = length_cm)
##### Data on predation preventation from depth (mortFishAqPredD) #####
# load the data
# this uses the fractional occurenec of small fish as a proxy for survival
# what is the max possible survival
maxSurvival = 0.9
predationPreData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortFishByOccurence",
na.strings = "NA")
predDepthData = predationPreData %>%
filter(fishSize_mm =="< 50",
variable == "Depth") %>%
mutate(fraction = cumlitaveFraction - lag(cumlitaveFraction),
unitlessValue = fraction/max(fraction, na.rm = T)*maxSurvival) %>%
rename(X = value)
##### Data on predation preventation from cover (mortFishAqPredH) #####
# load the data
# this uses the fractional occurenec of small fish as a proxy for survival
# what is the max possible survival
maxSurvival = 0.9
predationPreData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortFishByOccurence",
na.strings = "NA")
predDistData = predationPreData %>%
filter(fishSize_mm =="< 50",
variable == "Dis to Cover") %>%
mutate(fraction = cumlitaveFraction - lag(cumlitaveFraction),
fraction = ifelse(is.na(fraction), cumlitaveFraction, fraction),
unitlessValue = fraction/max(fraction, na.rm = T)*maxSurvival) %>%
rename(X = variable)
frame_list = c(predTData, predLData, predDepthData, predDistData)
results_list = c()
for(frame in frame_list){
df <- frame %>%
filter(X, unitlessValue)
append(results_list, df)
}
for(frame in frame_list){
df <- frame %>%
select(X, unitlessValue)
append(results_list, df)
}
for(frame in frame_list){
print(frame)
append(results_list, df)
}
for(frame in frame_list){
print(frame)
#append(results_list, df)
}
predDistData = predationPreData %>%
filter(fishSize_mm =="< 50",
variable == "Dis to Cover") %>%
mutate(fraction = cumlitaveFraction - lag(cumlitaveFraction),
fraction = ifelse(is.na(fraction), cumlitaveFraction, fraction),
unitlessValue = fraction/max(fraction, na.rm = T)*maxSurvival) %>%
rename(X = variable) %>%
select(X, variable, unitlessValue)
predDistData = predationPreData %>%
filter(fishSize_mm =="< 50",
variable == "Dis to Cover") %>%
mutate(fraction = cumlitaveFraction - lag(cumlitaveFraction),
fraction = ifelse(is.na(fraction), cumlitaveFraction, fraction),
unitlessValue = fraction/max(fraction, na.rm = T)*maxSurvival) %>%
rename(X = value) %>%
select(X, variable, unitlessValue)
predDistData
predTData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortAqByPredMet",
na.strings = "NA") %>%
group_by(author, year, journal, species) %>%
mutate(unitlessValue = 1-value/max(value)) %>%
ungroup()  %>%
select(X, variable, unitlessValue)
##### Data on predation preventation from length (mortFishAqPredL) #####
# load the data and convert all metrics to daily survival
predLData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortFishByMort",
na.strings = "NA") %>%
filter(note != "outlier") %>%
mutate(dailySurvival = NA,
dailySurvival = ifelse(units == "survival", measure^(1/time_days), dailySurvival),
dailySurvival = ifelse(units == "daily survival", measure, dailySurvival),
unitlessValue = ifelse(units == "relative vlun.", 1-measure, dailySurvival)) %>%
rename(X = length_cm) %>%
select(X, variable, unitlessValue)
##### Data on predation preventation from depth (mortFishAqPredD) #####
# load the data
# this uses the fractional occurenec of small fish as a proxy for survival
# what is the max possible survival
maxSurvival = 0.9
predationPreData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortFishByOccurence",
na.strings = "NA")
predDepthData = predationPreData %>%
filter(fishSize_mm =="< 50",
variable == "Depth") %>%
mutate(fraction = cumlitaveFraction - lag(cumlitaveFraction),
unitlessValue = fraction/max(fraction, na.rm = T)*maxSurvival) %>%
rename(X = value) %>%
select(X, variable, unitlessValue)
##### Data on predation preventation from cover (mortFishAqPredH) #####
# load the data
# this uses the fractional occurenec of small fish as a proxy for survival
# what is the max possible survival
maxSurvival = 0.9
predationPreData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortFishByOccurence",
na.strings = "NA")
predDistData = predationPreData %>%
filter(fishSize_mm =="< 50",
variable == "Dis to Cover") %>%
mutate(fraction = cumlitaveFraction - lag(cumlitaveFraction),
fraction = ifelse(is.na(fraction), cumlitaveFraction, fraction),
unitlessValue = fraction/max(fraction, na.rm = T)*maxSurvival) %>%
rename(X = value) %>%
select(X, variable, unitlessValue)
frame_list = c(predTData, predLData, predDepthData, predDistData)
bind_rows(frame_list, .id = "column_label")
bind_rows(frame_list)
bind_rows(predTData, predLData, predDepthData, predDistData)
predTData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortAqByPredMet",
na.strings = "NA") %>%
group_by(author, year, journal, species) %>%
mutate(unitlessValue = 1-value/max(value)) %>%
ungroup()  %>%
select(X, variable, unitlessValue)
##### Data on predation preventation from length (mortFishAqPredL) #####
# load the data and convert all metrics to daily survival
predLData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortFishByMort",
na.strings = "NA") %>%
filter(note != "outlier") %>%
mutate(dailySurvival = NA,
dailySurvival = ifelse(units == "survival", measure^(1/time_days), dailySurvival),
dailySurvival = ifelse(units == "daily survival", measure, dailySurvival),
unitlessValue = ifelse(units == "relative vlun.", 1-measure, dailySurvival)) %>%
rename(X = length_cm) %>%
select(X, variable, unitlessValue)
##### Data on predation preventation from depth (mortFishAqPredD) #####
# load the data
# this uses the fractional occurenec of small fish as a proxy for survival
# what is the max possible survival
maxSurvival = 0.9
predationPreData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortFishByOccurence",
na.strings = "NA")
predDepthData = predationPreData %>%
filter(fishSize_mm =="< 50",
variable == "Depth") %>%
mutate(fraction = cumlitaveFraction - lag(cumlitaveFraction),
unitlessValue = fraction/max(fraction, na.rm = T)*maxSurvival) %>%
rename(X = value) %>%
select(X, variable, unitlessValue)
##### Data on predation preventation from cover (mortFishAqPredH) #####
# load the data
# this uses the fractional occurenec of small fish as a proxy for survival
# what is the max possible survival
maxSurvival = 0.9
predationPreData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortFishByOccurence",
na.strings = "NA")
predDistData = predationPreData %>%
filter(fishSize_mm =="< 50",
variable == "Dis to Cover") %>%
mutate(fraction = cumlitaveFraction - lag(cumlitaveFraction),
fraction = ifelse(is.na(fraction), cumlitaveFraction, fraction),
unitlessValue = fraction/max(fraction, na.rm = T)*maxSurvival) %>%
rename(X = value) %>%
select(X, variable, unitlessValue)
bind_rows(predTData, predLData, predDepthData, predDistData)
predDepthData
predDistData
predTData
predLData
predLData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortFishByMort",
na.strings = "NA") %>%
filter(note != "outlier") %>%
mutate(dailySurvival = NA,
dailySurvival = ifelse(units == "survival", measure^(1/time_days), dailySurvival),
dailySurvival = ifelse(units == "daily survival", measure, dailySurvival),
unitlessValue = ifelse(units == "relative vlun.", 1-measure, dailySurvival)) %>%
rename(X = length_cm) %>%
select(X, variable, unitlessValue)
library("tidyverse")
library("openxlsx")
library(here)
setwd(here())
##### Data on predation preventation from temperature (mortFishAqPredT) #####
# load the data
# This uses physological measures of predators to get the potential predation effect of T
predTData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortAqByPredMet",
na.strings = "NA") %>%
group_by(author, year, journal, species) %>%
mutate(unitlessValue = 1-value/max(value)) %>%
ungroup()  %>%
select(X, variable, unitlessValue)
##### Data on predation preventation from length (mortFishAqPredL) #####
# load the data and convert all metrics to daily survival
predLData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortFishByMort",
na.strings = "NA") %>%
filter(note != "outlier") %>%
mutate(dailySurvival = NA,
dailySurvival = ifelse(units == "survival", measure^(1/time_days), dailySurvival),
dailySurvival = ifelse(units == "daily survival", measure, dailySurvival),
unitlessValue = ifelse(units == "relative vlun.", 1-measure, dailySurvival)) %>%
rename(X = length_cm) %>%
select(X, variable, unitlessValue)
##### Data on predation preventation from depth (mortFishAqPredD) #####
# load the data
# this uses the fractional occurenec of small fish as a proxy for survival
# what is the max possible survival
maxSurvival = 0.9
predationPreData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortFishByOccurence",
na.strings = "NA")
predDepthData = predationPreData %>%
filter(fishSize_mm =="< 50",
variable == "Depth") %>%
mutate(fraction = cumlitaveFraction - lag(cumlitaveFraction),
unitlessValue = fraction/max(fraction, na.rm = T)*maxSurvival) %>%
rename(X = value) %>%
select(X, variable, unitlessValue)
##### Data on predation preventation from cover (mortFishAqPredH) #####
# load the data
# this uses the fractional occurenec of small fish as a proxy for survival
# what is the max possible survival
maxSurvival = 0.9
predationPreData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortFishByOccurence",
na.strings = "NA")
predDistData = predationPreData %>%
filter(fishSize_mm =="< 50",
variable == "Dis to Cover") %>%
mutate(fraction = cumlitaveFraction - lag(cumlitaveFraction),
fraction = ifelse(is.na(fraction), cumlitaveFraction, fraction),
unitlessValue = fraction/max(fraction, na.rm = T)*maxSurvival) %>%
rename(X = value) %>%
select(X, variable, unitlessValue)
frame_list = c(predTData, predLData, predDepthData, predDistData)
bind_rows(frame_list)
bind_rows(predTData, predLData, predDepthData, predDistData)
library("tidyverse")
library("openxlsx")
library("here")
setwd(here())
##### Data on predation preventation from temperature (mortFishAqPredT) #####
# load the data
# This uses physological measures of predators to get the potential predation effect of T
predTData  <- function(){
read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortAqByPredMet",
na.strings = "NA") %>%
group_by(author, year, journal, species) %>%
mutate(unitlessValue = 1-value/max(value)) %>%
ungroup()  %>%
select(X, variable, unitlessValue)
}
##### Data on predation preventation from length (mortFishAqPredL) #####
# load the data and convert all metrics to daily survival
predLData <- function(){
read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortFishByMort",
na.strings = "NA") %>%
filter(note != "outlier") %>%
mutate(dailySurvival = NA,
dailySurvival = ifelse(units == "survival", measure^(1/time_days), dailySurvival),
dailySurvival = ifelse(units == "daily survival", measure, dailySurvival),
unitlessValue = ifelse(units == "relative vlun.", 1-measure, dailySurvival)) %>%
rename(X = length_cm) %>%
select(X, variable, unitlessValue)
}
##### Data on predation preventation from depth (mortFishAqPredD) #####
# load the data
# this uses the fractional occurenec of small fish as a proxy for survival
# what is the max possible survival
predationPreData <- function(){
read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortFishByOccurence",
na.strings = "NA")
}
predDepthData  <- function(maxSurvival=0.9){
predationPreData() %>%
filter(fishSize_mm =="< 50",
variable == "Depth") %>%
mutate(fraction = cumlitaveFraction - lag(cumlitaveFraction),
unitlessValue = fraction/max(fraction, na.rm = T)*maxSurvival) %>%
rename(X = value) %>%
select(X, variable, unitlessValue)
}
##### Data on predation preventation from cover (mortFishAqPredH) #####
# load the data
# this uses the fractional occurenec of small fish as a proxy for survival
# what is the max possible survival
predationPreData <- function(){
read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortFishByOccurence",
na.strings = "NA")
}
predDistData <- function(maxSurvival=0.9){
predationPreData() %>%
filter(fishSize_mm =="< 50",
variable == "Dis to Cover") %>%
mutate(fraction = cumlitaveFraction - lag(cumlitaveFraction),
fraction = ifelse(is.na(fraction), cumlitaveFraction, fraction),
unitlessValue = fraction/max(fraction, na.rm = T)*maxSurvival) %>%
rename(X = value) %>%
select(X, variable, unitlessValue)
}
final_data = bind_rows(predTData(), predLData(), predDepthData(), predDistData())
final_data
library("tidyverse")
library("openxlsx")
library("here")
setwd(here())
##### Data on predation preventation from temperature (mortFishAqPredT) #####
# load the data
# This uses physological measures of predators to get the potential predation effect of T
predTData  <- function(){
read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortAqByPredMet",
na.strings = "NA") %>%
group_by(author, year, journal, species) %>%
mutate(unitlessValue = 1-value/max(value)) %>%
ungroup()  %>%
select(X, variable, unitlessValue)
}
##### Data on predation preventation from length (mortFishAqPredL) #####
# load the data and convert all metrics to daily survival
predLData <- function(){
read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortFishByMort",
na.strings = "NA") %>%
filter(note != "outlier") %>%
mutate(dailySurvival = NA,
dailySurvival = ifelse(units == "survival", measure^(1/time_days), dailySurvival),
dailySurvival = ifelse(units == "daily survival", measure, dailySurvival),
unitlessValue = ifelse(units == "relative vlun.", 1-measure, dailySurvival)) %>%
rename(X = length_cm) %>%
select(X, variable, unitlessValue)
}
##### Data on predation preventation from depth (mortFishAqPredD) #####
# load the data
# this uses the fractional occurenec of small fish as a proxy for survival
# what is the max possible survival
predationPreData <- function(){
read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortFishByOccurence",
na.strings = "NA")
}
predDepthData  <- function(maxSurvival=0.9){
predationPreData() %>%
filter(fishSize_mm =="< 50",
variable == "Depth") %>%
mutate(fraction = cumlitaveFraction - lag(cumlitaveFraction),
unitlessValue = fraction/max(fraction, na.rm = T)*maxSurvival) %>%
rename(X = value) %>%
select(X, variable, unitlessValue)
}
##### Data on predation preventation from cover (mortFishAqPredH) #####
# load the data
# this uses the fractional occurenec of small fish as a proxy for survival
# what is the max possible survival
predationPreData <- function(){
read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortFishByOccurence",
na.strings = "NA")
}
predDistData <- function(maxSurvival=0.9){
predationPreData() %>%
filter(fishSize_mm =="< 50",
variable == "Dis to Cover") %>%
mutate(fraction = cumlitaveFraction - lag(cumlitaveFraction),
fraction = ifelse(is.na(fraction), cumlitaveFraction, fraction),
unitlessValue = fraction/max(fraction, na.rm = T)*maxSurvival) %>%
rename(X = value) %>%
select(X, variable, unitlessValue)
}
final_data  <- function(){
bind_rows(predTData(), predLData(), predDepthData(), predDistData())
}
final_data()
data <- final_data()
survival_variables <- data %>%
distinct(variable)
for(variable in survival_variables){
print(variable)
}
for(variable in survival_variables){
df %>% select(variable == variable)
}
for(variable in survival_variables){
df %>% filter(variable == variable)
}
for(x_variable in survival_variables){
df %>% filter(variable == x_variable)
}
for(x_variable in survival_variables){
data %>% filter(variable == x_variable)
}
for(x_variable in survival_variables){
print(x_variable)
#data %>% filter(variable == x_variable)
}
aggregate(. ~ variable, data=data, FUN=makeModel)
source("general_logistic_model.R")
source("data_processing.R")
aggregate(. ~ variable, data=data, FUN=makeModel)
makeModel  <-  function(data){
y <- data %>% select(unitlessValue)
x <- data %>% select(X)
glm(y ~ x,
family=quasibinomial(logit),
data=data)
}
source("general_logistic_model.R")
source("data_processing.R")
aggregate(. ~ variable, data=data, FUN=makeModel)
library("here")
setwd(here())
source("general_logistic_model.R")
source("data_processing.R")
# load the data (path and sheetName are currently hardcoded for testing)
data <- final_data()
survival_variables <- data %>%
distinct(variable)
for(x_variable in survival_variables){
print(x_variable)
#data %>% filter(variable == x_variable)
}
aggregate(. ~ variable, data=data, FUN=makeModel)
survival_increase_list<- c(length,
cover,
depth,
light,
density,
temperature)
library("here")
setwd(here())
source("general_logistic_model.R")
source("data_processing.R")
# load the data (path and sheetName are currently hardcoded for testing)
data <- final_data()
survival_variables <- data %>%
distinct(variable)
for(x_variable in survival_variables){
print(x_variable)
#data %>% filter(variable == x_variable)
}
aggregate(. ~ variable, data=data, FUN=makeModel)
data %>% nest(variable)
daat
data
data %>% nest(-variable)
data %<% filter(variable == "Temp")
data >%> filter(variable == "Temp")
library("here")
library("tidyverse")
library("openxlsx")
setwd(here())
data %<% filter(variable == "Temp")
data
data %>%
groupby(variable)
data %>%
group_by(variable)
data %>%
group_by(variable) %>%
makeModel()
data %>%
makeModel()
makeModel(data)
data
