library("tidyverse")
library("openxlsx")
install.packages("tidyverse")
library("tidyverse")
library("openxlsx")
packageurl <- "https://cran.r-project.org/src/contrib/Archive/tidyr/tidyr_1.1.0.tar.gz"
install.packages(packageurl, repos=NULL, type="source")
install.packages("tidyverse")
path <- "./inSALMO Fish Parameters.xlsx"
sheetName <- "mortAqByPredMet"
data <- makeData(path, sheetName)
survival_variables <- data %>%
distinct(variable)
for(variable in survival_variables){
print(variable)
}
setwd("~/Documents/predation")
path <- "./inSALMO Fish Parameters.xlsx"
sheetName <- "mortAqByPredMet"
data <- makeData(path, sheetName)
survival_variables <- data %>%
distinct(variable)
for(variable in survival_variables){
print(variable)
}
source("general_logistic_model.R")
# load the data (path and sheetName are currently hardcoded for testing)
path <- "./inSALMO Fish Parameters.xlsx"
sheetName <- "mortAqByPredMet"
data <- makeData(path, sheetName)
survival_variables <- data %>%
distinct(variable)
for(variable in survival_variables){
print(variable)
}
setwd(getwd())
getwd()
setwd(getwd())
source("general_logistic_model.R")
# load the data (path and sheetName are currently hardcoded for testing)
path <- "./inSALMO Fish Parameters.xlsx"
sheetName <- "mortAqByPredMet"
data <- makeData(path, sheetName)
survival_variables <- data %>%
distinct(variable)
for(variable in survival_variables){
print(variable)
}
survival_increase_list<- c(length,
cover,
depth,
light,
density,
temperature)
path <- "./inSALMO Fish Parameters.xlsx"
sheetName <- "mortAqByPredMet"
data <- makeData(path, sheetName)
survival_variables <- data %>%
distinct(variable)
for(variable in survival_variables){
print(variable)
}
path <- "./inSALMO Fish Parameters.xlsx"
sheetName <- "mortAqByPredMet"
data <- makeData(path, sheetName)
survival_variables <- data %>%
distinct(variable)
for(variable in survival_variables){
print(variable)
}
getwd()
setwd(getwd())
source("general_logistic_model.R")
path <- "./inSALMO Fish Parameters.xlsx"
sheetName <- "mortAqByPredMet"
data <- makeData(path, sheetName)
survival_variables <- data %>%
distinct(variable)
for(variable in survival_variables){
print(variable)
}
maxSurvival = 0.9
predationPreData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortFishByOccurence",
na.strings = "NA")
predDepthData = predationPreData %>%
filter(fishSize_mm =="< 50",
variable == "Depth") %>%
mutate(fraction = cumlitaveFraction - lag(cumlitaveFraction),
fractionalOccurrence = fraction/max(fraction, na.rm = T)*maxSurvival)
# do a logistic fit
predDepthModel = glm(predDepthData$fractionalOccurrence ~ predDepthData$value,
family=quasibinomial(logit),
data=predDepthData)
# add in predictions for plotting
predDepthWFitData = predDepthData %>%
filter(!is.na(fractionalOccurrence)) %>%
mutate(predict = predict.glm(predDepthModel, type = "response")) %>%
arrange(value)
# solve for inSALMO Parameters
# convert form m to cm
mortFishAqPredD1 = -(log(1/0.1-1)+predDepthModel[[1]][1])/predDepthModel[[1]][2]*100
mortFishAqPredD9 = -(log(1/0.9-1)+predDepthModel[[1]][1])/predDepthModel[[1]][2]*100
# Plot
ggplot(predDepthWFitData, aes(x = value)) +
theme_classic(base_size = 30) +
labs(y = "Fraction present", x = "Depth (m)") +
geom_point(aes(y = fractionalOccurrence)) +
geom_path(aes(y = predict), color = "red")
predDepthData = predationPreData %>%
filter(fishSize_mm =="< 50",
variable == "Depth") %>%
mutate(fraction = cumlitaveFraction - lag(cumlitaveFraction),
fractionalOccurrence = fraction/max(fraction, na.rm = T)*maxSurvival)
predationDepthData
predDepthData
predLData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortFishByMort",
na.strings = "NA") %>%
filter(note != "outlier") %>%
mutate(dailySurvival = NA,
dailySurvival = ifelse(units == "survival", measure^(1/time_days), dailySurvival),
dailySurvival = ifelse(units == "daily survival", measure, dailySurvival),
dailySurvival = ifelse(units == "relative vlun.", 1-measure, dailySurvival))
# do a logistic fit
predLModel = glm(predLData$dailySurvival ~ predLData$length_cm,
family=quasibinomial(logit),
data=predLData)
# add in predictions for plotting
predLWFitData = predLData %>%
mutate(predict = predict.glm(predLModel, type = "response")) %>%
arrange(length_cm)
# solve for inSALMO Parameters
# convert form m to cm
mortFishAqPredL1 = -(log(1/0.1-1)+predLModel[[1]][1])/predLModel[[1]][2]
mortFishAqPredL9 = -(log(1/0.9-1)+predLModel[[1]][1])/predLModel[[1]][2]
# we are using as a min survival so want to pass under the data not through it
mortFishAqPredL1 = 2
mortFishAqPredL9 = 8
LogistB	= log((0.9/0.1)^2)/(mortFishAqPredL9-mortFishAqPredL1)
LogistA	= log(0.1/0.9)-LogistB*(mortFishAqPredL1)
predLWFitData = predLWFitData %>%
mutate(overide = exp(LogistA+LogistB*length_cm)/(1+exp(LogistA+LogistB*length_cm)))
# Plot
ggplot(predLWFitData, aes(x = length_cm)) +
theme_classic(base_size = 30) +
labs(y = "Fraction present", x = "Length (cm)") +
geom_point(aes(y = dailySurvival)) +
geom_path(aes(y = predict), color = "red")+
geom_path(aes(y = overide), color = "blue")
predLData
View(predLModel)
View(predLData)
library("tidyverse")
library("openxlsx")
setwd(getwd())
# This uses physological measures of predators to get the potential predation effect of T
predTData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortAqByPredMet",
na.strings = "NA") %>%
group_by(author, year, journal, species) %>%
mutate(unitlessValue = 1-value/max(value)) %>%
ungroup()
# load the data and convert all metrics to daily survival
predLData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortFishByMort",
na.strings = "NA") %>%
filter(note != "outlier") %>%
mutate(dailySurvival = NA,
dailySurvival = ifelse(units == "survival", measure^(1/time_days), dailySurvival),
dailySurvival = ifelse(units == "daily survival", measure, dailySurvival),
dailySurvival = ifelse(units == "relative vlun.", 1-measure, dailySurvival))
##### Data on predation preventation from depth (mortFishAqPredD) #####
# load the data
# this uses the fractional occurenec of small fish as a proxy for survival
# what is the max possible survival
maxSurvival = 0.9
predationPreData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortFishByOccurence",
na.strings = "NA")
predDepthData = predationPreData %>%
filter(fishSize_mm =="< 50",
variable == "Depth") %>%
mutate(fraction = cumlitaveFraction - lag(cumlitaveFraction),
fractionalOccurrence = fraction/max(fraction, na.rm = T)*maxSurvival)
library("tidyverse")
library("openxlsx")
setwd(getwd())
##### Data on predation preventation from temperature (mortFishAqPredT) #####
# load the data
# This uses physological measures of predators to get the potential predation effect of T
predTData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortAqByPredMet",
na.strings = "NA") %>%
group_by(author, year, journal, species) %>%
mutate(unitlessValue = 1-value/max(value)) %>%
ungroup()
##### Data on predation preventation from length (mortFishAqPredL) #####
# load the data and convert all metrics to daily survival
predLData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortFishByMort",
na.strings = "NA") %>%
filter(note != "outlier") %>%
mutate(dailySurvival = NA,
dailySurvival = ifelse(units == "survival", measure^(1/time_days), dailySurvival),
dailySurvival = ifelse(units == "daily survival", measure, dailySurvival),
dailySurvival = ifelse(units == "relative vlun.", 1-measure, dailySurvival))
##### Data on predation preventation from depth (mortFishAqPredD) #####
# load the data
# this uses the fractional occurenec of small fish as a proxy for survival
# what is the max possible survival
maxSurvival = 0.9
predationPreData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortFishByOccurence",
na.strings = "NA")
predDepthData = predationPreData %>%
filter(fishSize_mm =="< 50",
variable == "Depth") %>%
mutate(fraction = cumlitaveFraction - lag(cumlitaveFraction),
fractionalOccurrence = fraction/max(fraction, na.rm = T)*maxSurvival)
##### Data on predation preventation from cover (mortFishAqPredH) #####
# load the data
# this uses the fractional occurenec of small fish as a proxy for survival
# what is the max possible survival
maxSurvival = 0.9
predationPreData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortFishByOccurence",
na.strings = "NA")
predDistData = predationPreData %>%
filter(fishSize_mm =="< 50",
variable == "Dis to Cover") %>%
mutate(fraction = cumlitaveFraction - lag(cumlitaveFraction),
fraction = ifelse(is.na(fraction), cumlitaveFraction, fraction),
fractionalOccurrence = fraction/max(fraction, na.rm = T)*maxSurvival)
