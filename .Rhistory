data=data)
# add in predictions for plotting
dataWPredictions = X %>%
mutate(predict = predict.glm(model, type = "response")) %>%
arrange(X)
# solve for inSALMO Parameters
# convert form m to cm
X1 = -(log(1/0.1-1)+model[[1]][1])/model[[1]][2]
X9 = -(log(1/0.9-1)+model[[1]][1])/model[[1]][2]
library("tidyverse")
library("openxlsx")
path <- "./inSALMO Fish Parameters.xlsx"
sheet <- "mortAqByPredMet"
data <-  read.xlsx(xlsxFile = path,
sheet = sheet,
na.strings = "NA") %>%
group_by(author, year, journal, species) %>%
mutate(unitlessValue = 1-value/max(value)) %>%
ungroup()
# do a logistic fit
model = glm(data$unitlessValue ~ data$X,
family=quasibinomial(logit),
data=data)
# add in predictions for plotting
dataWPredictions = data %>%
mutate(predict = predict.glm(model, type = "response")) %>%
arrange(X)
# solve for inSALMO Parameters
# convert form m to cm
X1 = -(log(1/0.1-1)+model[[1]][1])/model[[1]][2]
X9 = -(log(1/0.9-1)+model[[1]][1])/model[[1]][2]
library("tidyverse")
library("openxlsx")
path <- "./inSALMO Fish Parameters.xlsx"
sheet <- "mortAqByPredMet"
data <-  read.xlsx(xlsxFile = path,
sheet = sheet,
na.strings = "NA") %>%
group_by(author, year, journal, species) %>%
mutate(unitlessValue = 1-value/max(value)) %>%
ungroup()
# do a logistic fit
model = glm(data$unitlessValue ~ data$X,
family=quasibinomial(logit),
data=data)
# add in predictions for plotting
dataWPredictions = data %>%
mutate(predict = predict.glm(model, type = "response")) %>%
arrange(X)
# solve for inSALMO Parameters
# convert form m to cm
X1 = -(log(1/0.1-1)+model[[1]][1])/model[[1]][2]
X9 = -(log(1/0.9-1)+model[[1]][1])/model[[1]][2]
B <- (log(0.1/0.9) * 2) / (X1 - X9)
A <- log(0.1/0.9) - (B * X1)
habitatVariable <-  5
S <- exp(A + (B * habitatVariable)) / (1 + exp(A + (B * habitatVariable)))
S
X1
X9
library("tidyverse")
library("openxlsx")
path <- "./inSALMO Fish Parameters.xlsx"
sheet <- "mortAqByPredMet"
data <-  read.xlsx(xlsxFile = path,
sheet = sheet,
na.strings = "NA") %>%
group_by(author, year, journal, species) %>%
mutate(unitlessValue = 1-value/max(value)) %>%
ungroup()
# do a logistic fit
model = glm(data$unitlessValue ~ data$X,
family=quasibinomial(logit),
data=data)
# add in predictions for plotting
dataWPredictions = data %>%
mutate(predict = predict.glm(model, type = "response")) %>%
arrange(X)
# solve for inSALMO Parameters
# convert form m to cm
X1 = -(log(1/0.1-1)+model[[1]][1])/model[[1]][2]
X9 = -(log(1/0.9-1)+model[[1]][1])/model[[1]][2]
B <- (log(0.1/0.9) * 2) / (X1 - X9)
A <- log(0.1/0.9) - (B * X1)
habitatVariable <-  3.69
S <- exp(A + (B * habitatVariable)) / (1 + exp(A + (B * habitatVariable)))
library("tidyverse")
library("openxlsx")
path <- "./inSALMO Fish Parameters.xlsx"
sheet <- "mortAqByPredMet"
data <-  read.xlsx(xlsxFile = path,
sheet = sheet,
na.strings = "NA") %>%
group_by(author, year, journal, species) %>%
mutate(unitlessValue = 1-value/max(value)) %>%
ungroup()
# do a logistic fit
model = glm(data$unitlessValue ~ data$X,
family=quasibinomial(logit),
data=data)
# add in predictions for plotting
dataWPredictions = data %>%
mutate(predict = predict.glm(model, type = "response")) %>%
arrange(X)
# solve for inSALMO Parameters
# convert form m to cm
X1 = -(log(1/0.1-1)+model[[1]][1])/model[[1]][2]
X9 = -(log(1/0.9-1)+model[[1]][1])/model[[1]][2]
B <- (log(0.1/0.9) * 2) / (X1 - X9)
A <- log(0.1/0.9) - (B * X1)
habitatVariable <-  3.69
S <- exp(A + (B * habitatVariable)) / (1 + exp(A + (B * habitatVariable)))
S
path <- "./inSALMO Fish Parameters.xlsx"
sheet <- "mortAqByPredMet"
makeData <-  function(path, sheet){
read.xlsx(xlsxFile = path,
sheet = sheet,
na.strings = "NA") %>%
group_by(author, year, journal, species) %>%
mutate(unitlessValue = 1-value/max(value)) %>%
ungroup()
}
makeData(path, sheet)
makeLogisticModel <-  function(data, unitlessYValue, xValue){
glm(data$unitlessYValue ~ data$xValue,
family=quasibinomial(logit),
data=data)
}
data <- makeData(path, sheet)
data
library("tidyverse")
library("openxlsx")
##### Data on predation preventation from temperature (mortFishAqPredT) #####
# load the data
# This uses physological measures of predators to get the potential predation effect of T
predTData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortAqByPredMet",
na.strings = "NA") %>%
group_by(author, year, journal, species) %>%
mutate(unitlessValue = 1-value/max(value)) %>%
ungroup()
# do a logistic fit
predTModel = glm(predTData$unitlessValue ~ predTData$X,
family=quasibinomial(logit),
data=predTData)
# add in predictions for plotting
predTWFitData = predTData %>%
mutate(predict = predict.glm(predTModel, type = "response")) %>%
arrange(temperature)
# solve for inSALMO Parameters
# convert form m to cm
mortFishAqPredT1 = -(log(1/0.1-1)+predTModel[[1]][1])/predTModel[[1]][2]
mortFishAqPredT9 = -(log(1/0.9-1)+predTModel[[1]][1])/predTModel[[1]][2]
# Plot
ggplot(predTWFitData, aes(x = temperature)) +
theme_classic(base_size = 30) +
labs(y = "Fraction present", x = "T (C)") +
geom_point(aes(y = unitlessValue)) +
geom_path(aes(y = predict), color = "red")
B <- (log(0.1/0.9) * 2) / (mortFishAqPredT1 - mortFishAqPredT9)
A <- log(0.1/0.9) - (B * mortFishAqPredT1)
temperature <- 3
S_Temp <- exp(A + (B * temperature)) / (1 + exp(A + (B * temperature)))
length <- 0.1
cover <- 0.1
depth <- 0.1
light <- 0.1
density <- 0.1
survival_increase_list<- c(length,
cover,
depth,
light,
density,
S_Temp)
reach_pred_min <- 0.9
s_t <- reach_pred_min + ((1 - reach_pred_min) * (1 - prod(1 - survival_increase_list)))
s_t
library("tidyverse")
library("openxlsx")
##### Data on predation preventation from temperature (mortFishAqPredT) #####
# load the data
# This uses physological measures of predators to get the potential predation effect of T
predTData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortAqByPredMet",
na.strings = "NA") %>%
group_by(author, year, journal, species) %>%
mutate(unitlessValue = 1-value/max(value)) %>%
ungroup()
# do a logistic fit
predTModel = glm(predTData$unitlessValue ~ predTData$X,
family=quasibinomial(logit),
data=predTData)
# add in predictions for plotting
predTWFitData = predTData %>%
mutate(predict = predict.glm(predTModel, type = "response")) %>%
arrange(temperature)
# solve for inSALMO Parameters
# convert form m to cm
mortFishAqPredT1 = -(log(1/0.1-1)+predTModel[[1]][1])/predTModel[[1]][2]
mortFishAqPredT9 = -(log(1/0.9-1)+predTModel[[1]][1])/predTModel[[1]][2]
# Plot
ggplot(predTWFitData, aes(x = X)) +
theme_classic(base_size = 30) +
labs(y = "Fraction present", x = "T (C)") +
geom_point(aes(y = unitlessValue)) +
geom_path(aes(y = predict), color = "red")
B <- (log(0.1/0.9) * 2) / (mortFishAqPredT1 - mortFishAqPredT9)
A <- log(0.1/0.9) - (B * mortFishAqPredT1)
temperature <- 3
S_Temp <- exp(A + (B * temperature)) / (1 + exp(A + (B * temperature)))
length <- 0.1
cover <- 0.1
depth <- 0.1
light <- 0.1
density <- 0.1
survival_increase_list<- c(length,
cover,
depth,
light,
density,
S_Temp)
reach_pred_min <- 0.9
s_t <- reach_pred_min + ((1 - reach_pred_min) * (1 - prod(1 - survival_increase_list)))
s_t
library("tidyverse")
library("openxlsx")
##### Data on predation preventation from temperature (mortFishAqPredT) #####
# load the data
# This uses physological measures of predators to get the potential predation effect of T
predTData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortAqByPredMet",
na.strings = "NA") %>%
group_by(author, year, journal, species) %>%
mutate(unitlessValue = 1-value/max(value)) %>%
ungroup()
# do a logistic fit
predTModel = glm(predTData$unitlessValue ~ predTData$X,
family=quasibinomial(logit),
data=predTData)
# add in predictions for plotting
predTWFitData = predTData %>%
mutate(predict = predict.glm(predTModel, type = "response")) %>%
arrange(X)
# solve for inSALMO Parameters
# convert form m to cm
mortFishAqPredT1 = -(log(1/0.1-1)+predTModel[[1]][1])/predTModel[[1]][2]
mortFishAqPredT9 = -(log(1/0.9-1)+predTModel[[1]][1])/predTModel[[1]][2]
# Plot
ggplot(predTWFitData, aes(x = X)) +
theme_classic(base_size = 30) +
labs(y = "Fraction present", x = "T (C)") +
geom_point(aes(y = unitlessValue)) +
geom_path(aes(y = predict), color = "red")
B <- (log(0.1/0.9) * 2) / (mortFishAqPredT1 - mortFishAqPredT9)
A <- log(0.1/0.9) - (B * mortFishAqPredT1)
temperature <- 3
S_Temp <- exp(A + (B * temperature)) / (1 + exp(A + (B * temperature)))
length <- 0.1
cover <- 0.1
depth <- 0.1
light <- 0.1
density <- 0.1
survival_increase_list<- c(length,
cover,
depth,
light,
density,
S_Temp)
reach_pred_min <- 0.9
s_t <- reach_pred_min + ((1 - reach_pred_min) * (1 - prod(1 - survival_increase_list)))
s_t
library("tidyverse")
library("openxlsx")
path <- "./inSALMO Fish Parameters.xlsx"
sheet <- "mortAqByPredMet"
# read in Excel file and sheet name
makeData <-  function(path, sheet){
read.xlsx(xlsxFile = path,
sheet = sheet,
na.strings = "NA") %>%
group_by(author, year, journal, species) %>%
mutate(unitlessValue = 1-value/max(value)) %>%
ungroup()
}
# do a logistic fit
makeLogisticModel <-  function(data, unitlessYValue, xValue){
glm(data$unitlessYValue ~ data$xValue,
family=quasibinomial(logit),
data=data)
}
# solve for inSALMO Parameters
# convert form m to cm
X1  <- function(model){
-(log(1/0.1-1)+model[[1]][1])/model[[1]][2]
}
X9 <- function(model){
-(log(1/0.9-1)+model[[1]][1])/model[[1]][2]
}
S <- function(X1, X2, habitatVariable){
B <- (log(0.1/0.9) * 2) / (X1 - X9)
A <- log(0.1/0.9) - (B * X1)
S <- exp(A + (B * habitatVariable)) / (1 + exp(A + (B * habitatVariable)))
}
library("tidyverse")
library("openxlsx")
path <- "./inSALMO Fish Parameters.xlsx"
sheet <- "mortAqByPredMet"
# read in Excel file and sheet name
makeData <-  function(path, sheet){
read.xlsx(xlsxFile = path,
sheet = sheet,
na.strings = "NA") %>%
group_by(author, year, journal, species) %>%
mutate(unitlessValue = 1-value/max(value)) %>%
ungroup()
}
# do a logistic fit
makeLogisticModel <-  function(data, unitlessYValue, xValue){
glm(data$unitlessYValue ~ data$xValue,
family=quasibinomial(logit),
data=data)
}
# solve for inSALMO Parameters
# convert form m to cm
X1  <- function(model){
-(log(1/0.1-1)+model[[1]][1])/model[[1]][2]
}
X9 <- function(model){
-(log(1/0.9-1)+model[[1]][1])/model[[1]][2]
}
S <- function(X1, X2, habitatVariable){
B <- (log(0.1/0.9) * 2) / (X1 - X9)
A <- log(0.1/0.9) - (B * X1)
S <- exp(A + (B * habitatVariable)) / (1 + exp(A + (B * habitatVariable)))
}
data <- makeData(path, sheet)
model <- makeLogisticModel(data, unitlessValue, X)
X1 <- X1(model)
X9 <- X9(model)
S <- S(X1,X2, habitatVariable = 10)
S
data <- makeData(path, sheet)
data
model <- makeLogisticModel(data, unitlessValue, X)
model <- makeLogisticModel(data, 'unitlessValue', 'X')
model  <-  function(data, yValues, xValues){
glm(data$yValues ~ data$xValues,
family=quasibinomial(logit),
data=data)
}
path <- "./inSALMO Fish Parameters.xlsx"
sheetName <- "mortAqByPredMet"
makeData  <-  function(path, sheetName){
read.xlsx(xlsxFile = path,
sheet = sheetName,
na.strings = "NA") %>%
group_by(author, year, journal, species) %>%
mutate(unitlessValue = 1 - value/max(value)) %>%
ungroup()
}
data <- makeData(path, sheetName)
data
model <- model(data, unitlessValue, X)
model <- model(data, unitlessValue, x)
library("tidyverse")
library("openxlsx")
##### Data on predation preventation from temperature (mortFishAqPredT) #####
# load the data
# This uses physological measures of predators to get the potential predation effect of T
predTData = read.xlsx(xlsxFile = "./inSALMO Fish Parameters.xlsx",
sheet = "mortAqByPredMet",
na.strings = "NA") %>%
group_by(author, year, journal, species) %>%
mutate(unitlessValue = 1-value/max(value)) %>%
ungroup()
# do a logistic fit
predTModel = glm(predTData$unitlessValue ~ predTData$X,
family=quasibinomial(logit),
data=predTData)
library("tidyverse")
library("openxlsx")
##### Data on predation preventation from temperature (mortFishAqPredT) #####
# load the data
# This uses physological measures of predators to get the potential predation effect of T
path <- "./inSALMO Fish Parameters.xlsx"
sheetName <- "mortAqByPredMet"
makeData  <-  function(path, sheetName){
read.xlsx(xlsxFile = path,
sheet = sheetName,
na.strings = "NA") %>%
group_by(author, year, journal, species) %>%
mutate(unitlessValue = 1 - value/max(value)) %>%
ungroup()
}
# do a logistic fit
makeModel  <-  function(data, yValues, xValues){
glm(data$yValues ~ data$xValues,
family=quasibinomial(logit),
data=data)
}
makeModel(data, unitlessValue, X)
data
test <- function(data, column){
data$column
}
makeModel(data, unitlessValue, X)
test <- test(data, unitlessValue)
test <- function(data, column){
data$column
}
test <- test(data, unitlessValue)
test <- function(data, column){
a <- data$column
}
test <- test(data, unitlessValue)
makeModel  <-  function(data){
glm(data$unitlessValue ~ data$X,
family=quasibinomial(logit),
data=data)
}
makeModel(data)
library("tidyverse")
library("openxlsx")
##### Data on predation preventation from temperature (mortFishAqPredT) #####
# load the data
# This uses physological measures of predators to get the potential predation effect of T
path <- "./inSALMO Fish Parameters.xlsx"
sheetName <- "mortAqByPredMet"
makeData  <-  function(path, sheetName){
read.xlsx(xlsxFile = path,
sheet = sheetName,
na.strings = "NA") %>%
group_by(author, year, journal, species) %>%
mutate(unitlessValue = 1 - value/max(value)) %>%
ungroup()
}
# do a logistic fit
makeModel  <-  function(data){
glm(data$unitlessValue ~ data$X,
family=quasibinomial(logit),
data=data)
}
# add in predictions for plotting
#predTWFitData = predTData %>%
#  mutate(predict = predict.glm(predTModel, type = "response")) %>%
#  arrange(X)
# solve for inSALMO Parameters
# convert form m to cm
calculateX1  <- function(model){
-(log(1/0.1-1) + model[[1]][1])/model[[1]][2]
}
calculateX9 <- function(model){
-(log(1/0.9-1) + model[[1]][1])/model[[1]][2]
}
calculateSurvival <- function(path, sheet, habitatVariable){
data <- makeData(path, sheet)
model <- makeModel(data)
X1 <- calculateX1(model)
X9 <- calculateX9(model)
B <- (log(0.1/0.9) * 2) / (X1 - X9)
A <- log(0.1/0.9) - (B * X1)
S <- exp(A + (B * habitatVariable)) / (1 + exp(A + (B * habitatVariable)))
}
temp <- 15
calculateSurvival(path, sheet, temp)
S <- calculateSurvival(path, sheet, temp)
S
temp <- 3.69
S <- calculateSurvival(path, sheet, temp)
S
library("tidyverse")
library("openxlsx")
##### Data on predation preventation from temperature (mortFishAqPredT) #####
# load the data
# This uses physological measures of predators to get the potential predation effect of T
path <- "./inSALMO Fish Parameters.xlsx"
sheetName <- "mortAqByPredMet"
makeData  <-  function(path, sheetName){
read.xlsx(xlsxFile = path,
sheet = sheetName,
na.strings = "NA") %>%
group_by(author, year, journal, species) %>%
mutate(unitlessValue = 1 - value/max(value)) %>%
ungroup()
}
# do a logistic fit
makeModel  <-  function(data){
glm(data$unitlessValue ~ data$X,
family=quasibinomial(logit),
data=data)
}
calculateX1  <- function(model){
-(log(1/0.1-1) + model[[1]][1])/model[[1]][2]
}
calculateX9 <- function(model){
-(log(1/0.9-1) + model[[1]][1])/model[[1]][2]
}
calculateSurvival <- function(path, sheet, habitatVariable){
data <- makeData(path, sheet)
model <- makeModel(data)
X1 <- calculateX1(model)
X9 <- calculateX9(model)
B <- (log(0.1/0.9) * 2) / (X1 - X9)
A <- log(0.1/0.9) - (B * X1)
S <- exp(A + (B * habitatVariable)) / (1 + exp(A + (B * habitatVariable)))
}
temp <- 3.69
S <- calculateSurvival(path, sheet, temp)
S
S <- calculateSurvival(path, sheet, temp)
S
