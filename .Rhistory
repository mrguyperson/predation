df <- driver(number_of_bass, transect_length, n_transects, grid_side)
df %>%
group_by(grid) %>%
tally() %>%
mutate(pred_area = n * 0.5^2 * pi,
encounter_risk = pred_area / grid_side^2) %>%
arrange(desc(encounter_risk))
df <- driver(number_of_bass, transect_length, n_transects, grid_side)
df %>%
group_by(grid) %>%
tally() %>%
mutate(pred_area = n * 0.5^2 * pi,
encounter_risk = pred_area / grid_side^2) %>%
arrange(desc(encounter_risk))
df <- driver(number_of_bass, transect_length, n_transects, grid_side)
df %>%
group_by(grid) %>%
tally() %>%
mutate(pred_area = n * 0.5^2 * pi,
encounter_risk = pred_area / grid_side^2) %>%
arrange(desc(encounter_risk))
df <- driver(number_of_bass, transect_length, n_transects, grid_side)
df %>%
group_by(grid) %>%
tally() %>%
mutate(pred_area = n * 0.5^2 * pi,
encounter_risk = pred_area / grid_side^2) %>%
arrange(desc(encounter_risk))
df <- driver(number_of_bass, transect_length, n_transects, grid_side)
df %>%
group_by(grid) %>%
tally() %>%
mutate(pred_area = n * 0.5^2 * pi,
encounter_risk = pred_area / grid_side^2) %>%
arrange(desc(encounter_risk))
df <- driver(number_of_bass, transect_length, n_transects, grid_side)
df %>%
group_by(grid) %>%
tally() %>%
mutate(pred_area = n * 0.5^2 * pi,
encounter_risk = pred_area / grid_side^2) %>%
arrange(desc(encounter_risk))
df <- driver(number_of_bass, transect_length, n_transects, grid_side)
df %>%
group_by(grid) %>%
tally() %>%
mutate(pred_area = n * 0.5^2 * pi,
encounter_risk = pred_area / grid_side^2) %>%
arrange(desc(encounter_risk))
df <- driver(number_of_bass, transect_length, n_transects, grid_side)
df %>%
group_by(grid) %>%
tally() %>%
mutate(pred_area = n * 0.5^2 * pi,
encounter_risk = pred_area / grid_side^2) %>%
arrange(desc(encounter_risk))
df <- driver(number_of_bass, transect_length, n_transects, grid_side)
df %>%
group_by(grid) %>%
tally() %>%
mutate(pred_area = n * 0.5^2 * pi,
encounter_risk = pred_area / grid_side^2) %>%
arrange(desc(encounter_risk))
test <- df %>%
group_by(grid) %>%
tally() %>%
mutate(pred_area = n * 0.5^2 * pi,
encounter_risk = pred_area / grid_side^2) %>%
arrange(desc(encounter_risk))
hist(test$n)
hist(test$encounter_risk)
number_of_bass <- 300
transect_length  <- 1000
n_transects  <- 200
grid_side <- 10
create_preds <- function(number_of_bass, transect_length, n_transects){
data.frame(distance_from_shore = runif(n_transects * number_of_bass, min = 0, max = 10),
distance_downstream = runif(n_transects * number_of_bass, min = 0, max = n_transects * transect_length)) %>%
arrange(distance_downstream)
}
grid_num <- function(x, grid_side){
grid_val <- round_any(x, grid_side, ceiling)
return(grid_val/grid_side)
}
add_grid_nums <- function(df, x, grid_side){
df %>% mutate(grid = grid_num(distance_downstream))
}
driver <- function(number_of_bass, transect_length, n_transects, grid_side){
df <- create_preds(number_of_bass, transect_length, n_transects)
df %>% mutate(grid = grid_num(distance_downstream, grid_side))
}
df <- driver(number_of_bass, transect_length, n_transects, grid_side)
test <- df %>%
group_by(grid) %>%
tally() %>%
mutate(pred_area = n * 0.5^2 * pi,
encounter_risk = pred_area / grid_side^2) %>%
arrange(desc(encounter_risk))
df
install.packages("mapplots")
data(coast)
data(landings)
byx = 1
byy = 0.5
xlim <- c(-15.5,0)
ylim <- c(50.25,56)
grd <- make.grid(landings$Lon,landings$Lat,landings$LiveWeight, byx, byy, xlim, ylim)
breaks <- breaks.grid(grd,zero=FALSE)
basemap(xlim, ylim, main = "Gadoid landings")
draw.grid(grd,breaks)
draw.shape(coast, col="darkgreen")
legend.grid("topright", breaks=breaks/1000, type=2, inset=0.02, title="tonnes")
library("mapplots")
data(coast)
data(landings)
byx = 1
byy = 0.5
xlim <- c(-15.5,0)
ylim <- c(50.25,56)
grd <- make.grid(landings$Lon,landings$Lat,landings$LiveWeight, byx, byy, xlim, ylim)
breaks <- breaks.grid(grd,zero=FALSE)
basemap(xlim, ylim, main = "Gadoid landings")
draw.grid(grd,breaks)
draw.shape(coast, col="darkgreen")
legend.grid("topright", breaks=breaks/1000, type=2, inset=0.02, title="tonnes")
start_lat <- 100
start_lng <- 0
griddf <- expand.grid(latcoords = seq(from = start_lat, by = -10, l = 5),
lngcoords = seq(from = start_lng, by = -10, l = 5))
griddf
start_lat <- 0
start_lng <- 0
griddf <- expand.grid(latcoords = seq(from = start_lat, by = 5, l = 5),
lngcoords = seq(from = start_lng, by = 5, l = 5))
griddf
ggplot(df, aes(x = distance_downstream)) +
theme_classic(base_size = 30) +
labs(y = "Distance from shore (m)", x = "Distance downstream (m)") +
geom_point(aes(y = distance_from_shore))
df <- driver(number_of_bass, transect_length, n_transects, grid_side)
test <- df %>%
group_by(grid) %>%
tally() %>%
mutate(pred_area = n * 0.5^2 * pi,
encounter_risk = pred_area / grid_side^2) %>%
arrange(desc(encounter_risk))
number_of_bass <- 300
lit_zone_size <- 5
transect_length  <- 1000
n_transects  <- 200
grid_side <- 5
create_preds <- function(number_of_bass, transect_length, n_transects){
data.frame(distance_from_shore = runif(n_transects * number_of_bass, min = 0, max = lit_zone_size),
distance_downstream = runif(n_transects * number_of_bass, min = 0, max = n_transects * transect_length)) %>%
arrange(distance_downstream)
}
number_of_bass <- 300
lit_zone_size <- 5
transect_length  <- 1000
n_transects  <- 1
grid_side <- 5
create_preds <- function(number_of_bass, transect_length, n_transects){
data.frame(distance_from_shore = runif(n_transects * number_of_bass, min = 0, max = lit_zone_size),
distance_downstream = runif(n_transects * number_of_bass, min = 0, max = n_transects * transect_length)) %>%
arrange(distance_downstream)
}
grid_num <- function(x, grid_side){
grid_val <- round_any(x, grid_side, ceiling)
return(grid_val/grid_side)
}
add_grid_nums <- function(df, x, grid_side){
df %>% mutate(grid = grid_num(distance_downstream))
}
driver <- function(number_of_bass, transect_length, n_transects, grid_side){
df <- create_preds(number_of_bass, transect_length, n_transects)
df %>% mutate(grid = grid_num(distance_downstream, grid_side))
}
df <- driver(number_of_bass, transect_length, n_transects, grid_side)
test <- df %>%
group_by(grid) %>%
tally() %>%
mutate(pred_area = n * 0.5^2 * pi,
encounter_risk = pred_area / grid_side^2) %>%
arrange(desc(encounter_risk))
ggplot(df, aes(x = distance_downstream)) +
theme_classic(base_size = 30) +
labs(y = "Distance from shore (m)", x = "Distance downstream (m)") +
geom_point(aes(y = distance_from_shore))
install.packages("clusterGeneration")
library("clusterGeneration")
aa <- genPositiveDefMat(
dim = 3,
covMethod = "eigen",
eigenvalue = c(3, 2, 1))
print(aa)
print(eigen(aa$Sigma))
aa
tmp1 <- genRandomClust(
numClust = 7,
sepVal = 0.3,
numNonNoisy = 5,
numNoisy = 3,
numOutlier = 5,
numReplicate = 2,
fileName = "chk1")
tmp1
test <- df %>%
group_by(grid) %>%
tally() %>%
mutate(pred_area = n * 0.5^2 * pi,
encounter_risk = pred_area / grid_side^2) %>%
arrange(desc(encounter_risk))
test
test <- df %>%
group_by(grid) %>%
tally() %>%
mutate(pred_area = n * 0.5^2 * pi,
encounter_risk = pred_area / grid_side^2) %>%
arrange(encounter_risk)
test
left_bank_preds <- function(number_of_bass, transect_length, n_transects){
data.frame(distance_from_shore = runif(n_transects * number_of_bass, min = 0, max = lit_zone_size),
distance_downstream = runif(n_transects * number_of_bass, min = 0, max = n_transects * transect_length)) %>%
arrange(distance_downstream)
}
grid_num <- function(x, grid_side){
grid_val <- round_any(x, grid_side, ceiling)
return(grid_val/grid_side)
}
add_grid_nums <- function(df, x, grid_side){
df %>% mutate(grid = grid_num(distance_downstream))
}
driver <- function(number_of_bass, transect_length, n_transects, grid_side){
df <- left_bank_preds(number_of_bass, transect_length, n_transects)
df %>% mutate(grid = grid_num(distance_downstream, grid_side))
}
df <- driver(number_of_bass, transect_length, n_transects, grid_side)
df
ggplot(df, aes(x = distance_downstream)) +
theme_classic(base_size = 30) +
labs(y = "Distance from shore (m)", x = "Distance downstream (m)") +
geom_point(aes(y = distance_from_shore))
right_bank_preds <- function(number_of_bass, transect_length, n_transects, lit_zone_size, channel_width){
data.frame(distance_from_shore = runif(n_transects * number_of_bass, min = channel_width - lit_zone_size, max = lit_zone_size),
distance_downstream = runif(n_transects * number_of_bass, min = 0, max = n_transects * transect_length)) %>%
arrange(distance_downstream)
}
right_bank_preds(number_of_bass, transect_length, n_transects, lit_zone_size, channel_width)
number_of_bass <- 300
lit_zone_size <- 5
channel_width <- 100
transect_length  <- 1000
n_transects  <- 1
grid_side <- 5
right_bank_preds(number_of_bass, transect_length, n_transects, lit_zone_size, channel_width)
library('tidyverse')
library('plyr')
number_of_bass <- 300
lit_zone_size <- 5
channel_width <- 100
transect_length  <- 1000
n_transects  <- 1
grid_side <- 5
left_bank_preds <- function(number_of_bass, transect_length, n_transects, lit_zone_size){
data.frame(distance_from_shore = runif(n_transects * number_of_bass, min = 0, max = lit_zone_size),
distance_downstream = runif(n_transects * number_of_bass, min = 0, max = n_transects * transect_length)) %>%
arrange(distance_downstream)
}
right_bank_preds <- function(number_of_bass, transect_length, n_transects, lit_zone_size, channel_width){
data.frame(distance_from_shore = runif(n_transects * number_of_bass, min = channel_width - lit_zone_size, max = lit_zone_size),
distance_downstream = runif(n_transects * number_of_bass, min = 0, max = n_transects * transect_length)) %>%
arrange(distance_downstream)
}
right_bank_preds(number_of_bass, transect_length, n_transects, lit_zone_size, channel_width)
right_bank_preds <- function(number_of_bass, transect_length, n_transects, lit_zone_size, channel_width){
data.frame(distance_from_shore = runif(n_transects * number_of_bass, min = channel_width - lit_zone_size, max = channel_width),
distance_downstream = runif(n_transects * number_of_bass, min = 0, max = n_transects * transect_length)) %>%
arrange(distance_downstream)
}
right_bank_preds(number_of_bass, transect_length, n_transects, lit_zone_size, channel_width)
library('tidyverse')
library('plyr')
number_of_bass <- 300
lit_zone_size <- 5
channel_width <- 100
transect_length  <- 1000
n_transects  <- 1
grid_side <- 5
left_bank_preds <- function(number_of_bass, transect_length, n_transects, lit_zone_size){
data.frame(distance_from_shore = runif(n_transects * number_of_bass, min = 0, max = lit_zone_size),
distance_downstream = runif(n_transects * number_of_bass, min = 0, max = n_transects * transect_length)) %>%
arrange(distance_downstream)
}
right_bank_preds <- function(number_of_bass, transect_length, n_transects, lit_zone_size, channel_width){
data.frame(distance_from_shore = runif(n_transects * number_of_bass, min = channel_width - lit_zone_size, max = channel_width),
distance_downstream = runif(n_transects * number_of_bass, min = 0, max = n_transects * transect_length)) %>%
arrange(distance_downstream)
}
grid_num <- function(x, grid_side){
grid_val <- round_any(x, grid_side, ceiling)
return(grid_val/grid_side)
}
add_grid_nums <- function(df, x, grid_side){
df %>% mutate(grid = grid_num(distance_downstream))
}
driver_lb <- function(number_of_bass, transect_length, n_transects, grid_side, lit_zone_size, channel_width){
df_lb <- left_bank_preds(number_of_bass, transect_length, n_transects)
df_rb <- right_bank_preds(number_of_bass, transect_length, n_transects, lit_zone_size, channel_width)
df <- bind_rows(df_lb, df_rb)
df %>% mutate(grid = grid_num(distance_downstream, grid_side))
}
df <- driver(number_of_bass, transect_length, n_transects, grid_side, lit_zone_size, channel_width)
right_bank_preds(number_of_bass, transect_length, n_transects, lit_zone_size, channel_width)
driver <- function(number_of_bass, transect_length, n_transects, grid_side, lit_zone_size, channel_width){
df_lb <- left_bank_preds(number_of_bass, transect_length, n_transects)
df_rb <- right_bank_preds(number_of_bass, transect_length, n_transects, lit_zone_size, channel_width)
df <- bind_rows(df_lb, df_rb)
df %>% mutate(grid = grid_num(distance_downstream, grid_side))
}
df <- driver(number_of_bass, transect_length, n_transects, grid_side, lit_zone_size, channel_width)
driver <- function(number_of_bass, transect_length, n_transects, grid_side, lit_zone_size, channel_width){
df_lb <- left_bank_preds(number_of_bass, transect_length, n_transects, lit_zone_size)
df_rb <- right_bank_preds(number_of_bass, transect_length, n_transects, lit_zone_size, channel_width)
df <- bind_rows(df_lb, df_rb)
df %>% mutate(grid = grid_num(distance_downstream, grid_side))
}
df <- driver(number_of_bass, transect_length, n_transects, grid_side, lit_zone_size, channel_width)
ggplot(df, aes(x = distance_downstream)) +
theme_classic(base_size = 30) +
labs(y = "Distance from shore (m)", x = "Distance downstream (m)") +
geom_point(aes(y = distance_from_shore))
left_bank_preds <- function(number_of_bass, transect_length, n_transects, lit_zone_size){
data.frame(distance_from_shore = runif(n_transects * number_of_bass / 2, min = 0, max = lit_zone_size),
distance_downstream = runif(n_transects * number_of_bass / 2, min = 0, max = n_transects * transect_length)) %>%
arrange(distance_downstream)
}
right_bank_preds <- function(number_of_bass, transect_length, n_transects, lit_zone_size, channel_width){
data.frame(distance_from_shore = runif(n_transects * number_of_bass / 2, min = channel_width - lit_zone_size, max = channel_width),
distance_downstream = runif(n_transects * number_of_bass / 2, min = 0, max = n_transects * transect_length)) %>%
arrange(distance_downstream)
}
df <- driver(number_of_bass, transect_length, n_transects, grid_side, lit_zone_size, channel_width)
ggplot(df, aes(x = distance_downstream)) +
theme_classic(base_size = 30) +
labs(y = "Distance from shore (m)", x = "Distance downstream (m)") +
geom_point(aes(y = distance_from_shore))
df <- driver(number_of_bass, transect_length, n_transects, grid_side, lit_zone_size, channel_width)
ggplot(df, aes(x = distance_downstream)) +
theme_classic(base_size = 30) +
labs(y = "Distance from shore (m)", x = "Distance downstream (m)") +
geom_point(aes(y = distance_from_shore))
df <- driver(number_of_bass, transect_length, n_transects, grid_side, lit_zone_size, channel_width)
ggplot(df, aes(x = distance_downstream)) +
theme_classic(base_size = 30) +
labs(y = "Distance from shore (m)", x = "Distance downstream (m)") +
geom_point(aes(y = distance_from_shore))
df <- driver(number_of_bass, transect_length, n_transects, grid_side, lit_zone_size, channel_width)
ggplot(df, aes(x = distance_downstream)) +
theme_classic(base_size = 30) +
labs(y = "Distance from shore (m)", x = "Distance downstream (m)") +
geom_point(aes(y = distance_from_shore))
df <- driver(number_of_bass, transect_length, n_transects, grid_side, lit_zone_size, channel_width)
ggplot(df, aes(x = distance_downstream)) +
theme_classic(base_size = 30) +
labs(y = "Distance from shore (m)", x = "Distance downstream (m)") +
geom_point(aes(y = distance_from_shore))
df <- driver(number_of_bass, transect_length, n_transects, grid_side, lit_zone_size, channel_width)
ggplot(df, aes(x = distance_downstream)) +
theme_classic(base_size = 30) +
labs(y = "Distance from shore (m)", x = "Distance downstream (m)") +
geom_point(aes(y = distance_from_shore))
hist(rpois(1000,1))
hist(rpois(1000,2))
number_of_stripers <- function(){
runif(min = 0, max = 1200)
}
number_of_stripers()
number_of_stripers <- function(){
runif(1,min = 0, max = 1200)
}
number_of_stripers()
number_of_stripers()
number_of_stripers()
number_of_stripers()
number_of_stripers()
number_of_stripers()
hist(rpos(100000,3))
hist(rpois(100000,3))
hist(rpois(100000,1))
hist(rpois(100000,10))
number_of_stripers <- function(){
stripers <- -1
while(stripers < 0){
stripers <- rnorm(1, mean = 332, sd = 477)
}
}
number_of_stripers()
stripers <-number_of_stripers()
stripers
rnorm(1, mean = 332, sd = 477)
number_of_stripers <- function(){
stripers <- -1
while(stripers < 0){
stripers <- rnorm(1, mean = 332, sd = 477)
print(stripers)
}
}
stripers <-number_of_stripers()
stripers
number_of_stripers <- function(){
stripers <- -1
stripers <- while(stripers < 0){
stripers <- rnorm(1, mean = 332, sd = 477)
print(stripers)
}
}
stripers <-number_of_stripers()
stripers
number_of_stripers <- function(){
stripers <- -1
while(stripers < 0){
stripers <- rnorm(1, mean = 332, sd = 477)
print(stripers)
return(stripers)
}
}
stripers <-number_of_stripers()
stripers
stripers <-number_of_stripers()
stripers <-number_of_stripers()
stripers <-number_of_stripers()
stripers <-number_of_stripers()
stripers <-number_of_stripers()
stripers <-number_of_stripers()
stripers <-number_of_stripers()
stripers <-number_of_stripers()
stripers <-number_of_stripers()
stripers <-number_of_stripers()
stripers <-number_of_stripers()
stripers <-number_of_stripers()
stripers <-number_of_stripers()
stripers <-number_of_stripers()
stripers
number_of_stripers <- function(){
stripers <- -1
while(stripers < 0){
stripers <- rnorm(1, mean = 332, sd = 477)
if (stripers > 0){
return(stripers)
}
}
number_of_stripers <- function(){
stripers <- -1
while(stripers < 0){
stripers <- rnorm(1, mean = 332, sd = 477)
if (stripers > 0){
return(stripers)
}
}
}
number_of_stripers <- function(){
stripers <- -1
while(stripers < 0){
stripers <- rnorm(1, mean = 332, sd = 477)
if (stripers > 0){
return(stripers)
}
}
}
}
number_of_stripers <- function(){
stripers <- -1
while(stripers < 0){
stripers <- rnorm(1, mean = 332, sd = 477)
if (stripers > 0){
return(stripers)
}
}
}
stripers <-number_of_stripers()
number_of_stripers <- function(){
stripers <- -1
while(stripers < 0){
stripers <- rnorm(1, mean = 332, sd = 477)
print(stripers)
if (stripers > 0){
return(stripers)
}
}
}
stripers <-number_of_stripers()
stripers <-number_of_stripers()
number_of_stripers <- function(){
stripers <- -1
while(stripers < 0){
stripers <- rnorm(1, mean = 332, sd = 477)
print(stripers)
if (stripers > 0){
return(stripers)
}
}
}
number_of_stripers <- function(){
stripers <- -1
while(stripers < 0){
stripers <- rnorm(1, mean = 332, sd = 477)
print(stripers)
if (stripers > 0){
return(stripers)
}
}
}
